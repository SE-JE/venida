/**
 * Venida Platform
 * Free Open Source Software
 * Autogenerated by SEJE - Digital
 */

namespace {{ controllerNamespace }} {

    const BaseController = Venida.import('Venida.system.Core.Base.Controller');

    export class {{ controllerName }} extends BaseController {

        constructor(request: any, response: any) {
            super(request, response);
        }

        public async index() {
            let {{ serviceName }} = await this.load('{{ serviceName }}', 'service');

            let { query } = this.request;
            let limit = query.limit ? parseInt(query.limit) : 10;
            let page = query.page ? parseInt(query.page) : 1;
            let search = query.search ?? '';
            let result = await {{ serviceName }}.paginate(page, limit, search);

            return Venida.Response.send(this.response, result);
        }

        public async detail({{ primaryKey }}: {{ primaryKeyType }}) {
            let {{ serviceName }} = await this.load('{{ serviceName }}', 'service');
            let result = await {{ serviceName }}.findByPrimary({{ primaryKey }});

            if (!result) {
                return Venida.Response.exception('NOT_FOUND', '{{ name }} not found');
            }

            return Venida.Response.send(this.response, result);
        }

        public async create() {
            let body = this.request.body;
            if (!body) {
                return Venida.Response.sendError(this.response, 'BAD_REQUEST', 'Body is required');
            }

            let {{ serviceName }} = await this.load('{{ serviceName }}', 'service');
            let result = await {{ serviceName }}.create(body);

            return Venida.Response.send(this.response, result);
        }

        public async update({{ primaryKey }}: {{ primaryKeyType }}) {
            let body = this.request.body;
            if (!body) {
                return Venida.Response.sendError(this.response, 'BAD_REQUEST', 'Body is required');
            }

            let {{ serviceName }} = await this.load('{{ serviceName }}', 'service');
            let result = await {{ serviceName }}.update({{ primaryKey }}, body);

            return Venida.Response.send(this.response, result);
        }

        public async delete({{ primaryKey }}: {{ primaryKeyType }}) {
            let {{ serviceName }} = await this.load('{{ serviceName }}', 'service');
            let result = await {{ serviceName }}.delete({{ primaryKey }});

            return Venida.Response.send(this.response, result);
        }
    }
}

module.exports = {{ controllerNamespace }}.{{ controllerName }};