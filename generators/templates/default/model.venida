/**
 * Venida Platform
 * Free Open Source Software
 * Autogenerated by SEJE - Digital
 */

namespace {{ modelNamespace }} {

    const BaseModel = Venida.import('Venida.system.Core.Base.Model');

    interface {{ interfaceName }} {{ interfaceProperties }}

    export class {{ modelName }} extends BaseModel {

        public tableName: string = '{{ tableName }}';

        public async findAll(limit: number = 100) {

            let result = await this.DB.select('*')
                .from(this.tableName)
                .limit(limit);

            return result;
        }

        public async findOne(whereQuery: any) {
            let result = await this.DB.select('*')
                .from(this.tableName)
                .where(whereQuery)
                .limit(1);

            return result.length > 0 ? result[0] : null;
        }

        public async insert(data: {{ interfaceName }}) {
            let result = await this.DB.insert(data).into(this.tableName);
            return result;
        }

        public async update({{ primaryKey }}: {{ primaryKeyType }}, data: {{ interfaceName }}) {
            let result = await this.DB.update(data).from(this.tableName).where({ {{ primaryKey }} });
            return result;
        }

        public async delete({{ primaryKey }}: {{ primaryKeyType }}) {
            let result = await this.DB.delete().from(this.tableName).where({ {{ primaryKey }} });
            return result;
        }

        public async paginate(offset: number = 0, limit: number = 10, search: string = '') {
            let data = await this.DB.select('*').from(this.tableName).limit(limit).offset(offset);

            let dataCount = await this.DB
                .from(this.tableName)
                .count('{{ primaryKey }} as total');

            let total: number = dataCount.length > 0 ? dataCount[0].total : 0;

            return {
                data,
                total
            }
        }


    }


}

module.exports = {{ modelNamespace }}.{{ modelName }};